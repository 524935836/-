字符串
	length
		- 获取字符串的长度

	charAt()
		- 根据索引获取指定的字符
	charCodeAt()
		- 根据索引获取指定的字符编码
	indexOf()
	lastIndexOf()
		- 从一个字符串中检索指定内容
		- 需要一个字符串作为参数，这个字符串就是要检索的内容，
			如果找到该内容，则会返回其第一次出现的索引，如果没有找到则返回-1。
		- 可以指定一个第二个参数，来表示开始查找的位置
		- indexOf()是从前向后找
		- lastIndexOf()是从后向前找

	includes()
		用于判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false。
	
	toLowerCase() 
		- 将字符串转换为小写并返回
	toUpperCase() 
		- 将字符串转换为大写并返回

	slice()
		- 可以从一个字符串中截取指定的内容，并将截取到内容返回，不会影响原变量
		- 参数：
			第一个：截取开始的位置（包括开始）
			第二个：截取结束的位置（不包括结束）
				- 可以省略第二个参数，如果省略则一直截取到最后
			- 可以传负数，如果是负数则从后往前数
	substring()
		- 和slice()基本一致，不同的是它不能接受负值作为参数，如果设置一个负值，则会自动修正为0，
			substring()中如果第二个参数小于第一个，自动调整位置

	split()
		- 可以根据指定内容将一个字符串拆分为一个数组   （）返回整个字符串作为数组，("")将字符串拆分成一个个返回
		- 参数：
			- 需要一个字符串作为参数，将会根据字符串去拆分数组
				可以接收一个正则表达式，此时会根据正则表达式去拆分数组


	replace()  
		- 可以将字符串中指定内容替换为新的内容
		- 参数：
			- 第一个：被替换的内容，可以是一个正则表达式
			- 第二个：替换的新内容


	match() 
		- 可以将字符串中和正则表达式匹配的内容提取出来
		- 参数：
			- 正则表达式，可以根据该正则表达式将字符串中符合要求的内容提取出来
					并且封装到一个数组中返回
		如果使用g标志，则将返回与完整正则表达式匹配的所有结果，但不会返回捕获组。
		如果未使用g标志，则仅返回第一个完整匹配及其相关的捕获组（Array）。 
			
	search() 
		- 可以根据正则表达式去字符串中查找指定的内容
		- 参数：
			正则表达式，将会根据该表达式查询内容，
					并且将第一个匹配到的内容的索引返回，如果没有匹配到任何内容，则返回-1。

	padStart
		方法用另一个字符串填充当前字符串(如果需要的话，会重复多次)，以便产生的字符串达到给定的长度。从当前字符串的左侧开始填充。	
	
	matchAll
		返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器。


数组
		- push()
			- 用来向数组的末尾添加一个或多个元素，并返回数组新的长度
			- 语法：数组.push(元素1,元素2,元素N)
		- pop()
			- 用来删除数组的最后一个元素，并返回被删除的元素
		- unshift()
			- 向数组的前边添加一个或多个元素，并返回数组的新的长度
		- shift()
			- 删除数组的前边的一个元素，并返回被删除的元素
		- slice()
			- 可以从一个数组中截取指定的元素
			- 该方法不会影响原数组，而是将截取到的内容封装为一个新的数组并返回
			- 参数：
				1.截取开始位置的索引（包括开始位置）
				2.截取结束位置的索引（不包括结束位置）
					- 第二个参数可以省略不写，如果不写则一直截取到最后
				- 参数可以传递一个负值，如果是负值，则从后往前数
		- splice()
			- 可以用来删除数组中指定元素，并使用新的元素替换
				该方法会将删除的元素封装到新数组中返回
			- 参数：
				1.删除开始位置的索引
				2.删除的个数
				3.三个以后，都是替换的元素，这些元素将会插入到开始位置索引的前边

	sort()
		- 可以对一个数组中的内容进行排序，默认是按照Unicode编码进行排序
			调用以后，会直接修改原数组。
		- 可以自己指定排序的规则，需要一个回调函数作为参数：
			function(a,b){
				
				//升序排列
				//return a-b;
				
				//降序排列
				return b-a;
			}
	reverse()
		- 可以用来反转一个数组，它会对原数组产生影响
	concat()
		- 可以连接两个或多个数组，它不会影响原数组，而是新数组作为返回值返回
	join()
		- 可以将一个数组转换为一个字符串     ()将数组以逗号形式相连，("")数组内元素之间都没有任何字符，整个字符串
		- 参数：
			需要一个字符串作为参数，这个字符串将会作为连接符来连接数组中的元素
			如果不指定连接符则默认使用,

	
	indexOf
		返回在数组中可以找到一个给定元素的第一个索引，如果不存在，则返回-1。

	includes()
 		用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false。

	find
	           	方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined。
	
	findIndex
		返回数组中满足提供的测试函数的第一个元素的索引。若没有找到对应元素则返回-1。					

	filter()
		创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。

	map()
		创建一个新数组，该数组中的每个元素是调用一次提供的函数后的返回值。

	some()
		测试数组中是不是至少有1个元素通过了被提供的函数测试。它返回的是一个Boolean类型的值。

	every
		测试一个数组内的所有元素是否都能通过某个指定函数的测试。它返回一个布尔值。
	reduce
		对数组中的每个元素执行一个由您提供的reducer函数(升序执行)，将其结果汇总为单个返回值。